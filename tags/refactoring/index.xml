<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>refactoring on</title><link>https://www.ytreza.dev/tags/refactoring/</link><description>Recent content in refactoring on</description><generator>Hugo -- gohugo.io</generator><language>fr-FR</language><lastBuildDate>Fri, 06 May 2022 16:32:50 +0200</lastBuildDate><atom:link href="https://www.ytreza.dev/tags/refactoring/index.xml" rel="self" type="application/rss+xml"/><item><title>etude du kata gilded rose - golden master</title><link>https://www.ytreza.dev/blog/etude-du-kata-gilded-rose-golden-master/</link><pubDate>Fri, 06 May 2022 16:32:50 +0200</pubDate><guid>https://www.ytreza.dev/blog/etude-du-kata-gilded-rose-golden-master/</guid><description>Dans cette étude de kata, nous allons étudier [[wiki/gilded rose|gilded rose]]. Je vais te montrer comment mettre en place très rapidement un test de caractérisation avc un golden master et le résoudre encore plus rapidement grâce à une astuce de refactoring.</description></item><item><title>Etude du kata bowling (en un seul test)</title><link>https://www.ytreza.dev/blog/etude-du-kata-bowling-one-test/</link><pubDate>Mon, 02 May 2022 15:46:23 +0200</pubDate><guid>https://www.ytreza.dev/blog/etude-du-kata-bowling-one-test/</guid><description>Introduction Dans cette étude de kata, nous allons nous attarder sur une technique clé de TDD, la technique de la triche.</description></item><item><title>Maîtriser les refactorings de base</title><link>https://www.ytreza.dev/blog/Ma%C3%AEtriser-les-refactorings-de-base/</link><pubDate>Wed, 27 Apr 2022 17:08:40 +0200</pubDate><guid>https://www.ytreza.dev/blog/Ma%C3%AEtriser-les-refactorings-de-base/</guid><description>A force de pratiquer le refactoring, j&amp;rsquo;ai constaté une chose. La loi de pareto s&amp;rsquo;applique. Voyons voir ce que cela signifie.</description></item></channel></rss>